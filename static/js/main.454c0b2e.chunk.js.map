{"version":3,"sources":["assets/images/about-pic.jpg","assets/Skills.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Skills","name","description","link","App","react_default","a","createElement","MuiThemeProvider_default","className","App_About","App_Contact","Component","About","styles","chip","margin","chipListWrapper","display","flexWrap","padding","justifyContent","box","rotateImage","transform","_this2","this","index_es","src","aboutPic","size","style","map","skill","key","title","onClick","window","open","Contact","href","fa","md","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4SCuCzBC,EAtCA,CACX,CACIC,KAAM,UACNC,YAAa,+FACbC,KAAM,uBAEV,CACIF,KAAM,UACNC,YAAa,mBACbC,KAAM,iCAEV,CACIF,KAAM,SACNC,YAAa,2CACbC,KAAM,2BAEV,CACIF,KAAM,cACNC,YAAa,kDACbC,KAAM,4CAEV,CACIF,KAAM,SACNC,YAAa,gFACbC,KAAM,uBAEV,CACIF,KAAM,SACNC,YAAa,8EACbC,KAAM,2BAEV,CACIF,KAAM,MACNC,YAAa,+GACbC,KAAM,yDC1BRC,mLAGF,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACG,EAAD,MACAL,EAAAC,EAAAC,cAACI,EAAD,eAPQC,aAeZC,6MAEJC,OAAS,CACPC,KAAM,CACJC,OAAQ,GAEVC,gBAAiB,CACfC,QAAS,OACTC,SAAU,OACVC,QAAS,GACTC,eAAgB,UAElBC,IAAK,CACHF,QAAS,IAEXG,YAAa,CACXC,UAAW,0FAIN,IAAAC,EAAAC,KACP,OACErB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAEbJ,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEC,IAAKC,IACLC,KAAM,IACNrB,UAAU,cAEZJ,EAAAC,EAAAC,cAAA,MAAIwB,MAAOL,KAAKZ,OAAOQ,IAAKb,UAAU,eAAtC,kBAEAJ,EAAAC,EAAAC,cAAA,KAAGwB,MAAOL,KAAKZ,OAAOQ,IAAKb,UAAU,cAArC,4BAEEJ,EAAAC,EAAAC,cAAA,WAFF,uDAMAF,EAAAC,EAAAC,cAAA,OAAKwB,MAAOL,KAAKZ,OAAOG,iBAEpBjB,EAAOgC,IAAI,SAAAC,GACT,OACE5B,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEO,IAAKD,EAAMhC,KACXkC,MAAOF,EAAM/B,YACbkC,QAAS,WAAQC,OAAOC,KAAKL,EAAM9B,KAAM,WACzC4B,MAAON,EAAKX,OAAOC,MAClBkB,EAAMhC,iBA9CLW,aA0Dd2B,mLAGF,OACElC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAEbJ,EAAAC,EAAAC,cAAA,KAAGiC,KAAK,wCACNnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAWX,KAAK,QAElBzB,EAAAC,EAAAC,cAAA,KAAGiC,KAAK,0DACNnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAiBX,KAAK,QAExBzB,EAAAC,EAAAC,cAAA,KAAGiC,KAAK,uCACNnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAUX,KAAK,QAEjBzB,EAAAC,EAAAC,cAAA,KAAGiC,KAAK,yBACNnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASX,KAAK,QAEhBzB,EAAAC,EAAAC,cAAA,KAAGiC,KAAK,kCACNnC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAASZ,KAAK,QAEhBzB,EAAAC,EAAAC,cAAA,KAAGiC,KAAK,qBACNnC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAASZ,KAAK,gBAtBFlB,aA8BPR,ICtGTuC,EAAcC,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KCzEjEC,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBnB,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,GAAwBlC,OAAOQ,UAC3C2B,SAAWnC,OAAOQ,SAAS2B,OAIvC,OAGFnC,OAAOoC,iBAAiB,OAAQ,WAC9B,IAAMxB,EAAK,GAAAyB,OAAMH,GAAN,sBAEP5B,GAiDV,SAAiCM,GAE/B0B,MAAM1B,GACHI,KAAK,SAAAuB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C9B,UAAUC,cAAc8B,MAAM5B,KAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,KAAK,WAC7BhB,OAAOQ,SAASsC,aAKpBnC,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEArEAsB,CAAwBnC,GAIxBC,UAAUC,cAAc8B,MAAM5B,KAAK,WACjCQ,QAAQC,IACN,+GAMJd,EAAgBC,MCzCxBoC","file":"static/js/main.454c0b2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about-pic.65a1fb5d.jpg\";","\nconst Skills = [\n    {\n        name: 'Flutter',\n        description: 'Flutter allows you to build beautiful native apps on iOS and Android from a single codebase.',\n        link: 'https://flutter.io/',\n    },\n    {\n        name: 'Android',\n        description: 'Android platform',\n        link: 'http://developer.android.com/',\n    },\n    {\n        name: 'Kotlin',\n        description: 'Consize, Safe and Interoperable language',\n        link: 'https://kotlinlang.org/',\n    },\n    {\n        name: 'ReactNative',\n        description: 'A framework for building native apps with React',\n        link: 'https://github.com/facebook/react-native',\n    },\n    {\n        name: 'NodeJs',\n        description: 'A JavaScript runtime environment that executes JavaScript code on server side',\n        link: 'https://nodejs.org/',\n    },\n    {\n        name: 'Python',\n        description: 'Python is an interpreted, high-level, general-purpose programming language.',\n        link: 'https://www.python.org/',\n    },\n    {\n        name: 'IoT',\n        description: 'Internet of Things (IoT) is a network of connected physical devices that are accessible through the internet',\n        link: 'https://www.google.com/search?q=iot',\n    },\n];\n\nexport default Skills;","import React, { Component } from 'react';\nimport './App.css';\nimport aboutPic from './assets/images/about-pic.jpg';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport { Avatar, Chip } from 'material-ui';\nimport Skills from './assets/Skills';\nimport { FaTwitter, FaStackOverflow, FaGithub, FaSkype } from \"react-icons/fa\";\nimport { MdEmail, MdPhone } from \"react-icons/md\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <MuiThemeProvider>\n        <div className=\"App\">\n          <About />\n          <Contact />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n\n}\n\nclass About extends Component {\n\n  styles = {\n    chip: {\n      margin: 4,\n    },\n    chipListWrapper: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      padding: 16,\n      justifyContent: 'center',\n    },\n    box: {\n      padding: 16,\n    },\n    rotateImage: {\n      transform: 'rotate(90deg)',\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"About\">\n\n        <Avatar\n          src={aboutPic}\n          size={256}\n          className=\"About-pic\" />\n\n        <h1 style={this.styles.box} className=\"About-title\">Hemant Kaushik</h1>\n\n        <p style={this.styles.box} className=\"About-desc\">\n          Love to learn new things.\n          <br />\n          8+ years of experience in development and training.\n        </p>\n\n        <div style={this.styles.chipListWrapper}>\n          {\n            Skills.map(skill => {\n              return (\n                <Chip\n                  key={skill.name}\n                  title={skill.description}\n                  onClick={() => { window.open(skill.link, '_blank') }}\n                  style={this.styles.chip}>\n                  {skill.name}\n                </Chip>\n              );\n            })\n          }\n        </div>\n\n      </div>\n    );\n  }\n}\n\nclass Contact extends Component {\n\n  render() {\n    return (\n      <div className=\"Contact\">\n\n        <a href='https://www.twitter.com/about_hemant'>\n          <FaTwitter size='24' />\n        </a>\n        <a href='https://stackoverflow.com/users/7784230/hemant-kaushik'>\n          <FaStackOverflow size='24' />\n        </a>\n        <a href='https://github.com/TheHemantKaushik'>\n          <FaGithub size='24' />\n        </a>\n        <a href='live:thehemantkaushik'>\n          <FaSkype size='24' />\n        </a>\n        <a href='mailto:hi@thehemantkaushik.com'>\n          <MdEmail size='24' />\n        </a>\n        <a href='tel:+919017794910'>\n          <MdPhone size='24' />\n        </a>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}